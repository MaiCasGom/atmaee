SumaTotal <- rowSums(DatosVivienda[, c(7, 8, 9)])
DatosVivienda$Fecha=as.Date(DatosVivienda$Fecha, format = "%d/%m/%Y")
DatosVivienda$Hora=substr(DatosVivienda$Hora, 1,2)
DatosViviendaAgrupados <- data.frame(fecha=DatosVivienda$Fecha, hora=DatosVivienda$Hora, consumo_total=SumaTotal)
SumaTotalPorFechaHora <- aggregate(DatosViviendaAgrupados$consumo_total, list(fecha=DatosViviendaAgrupados$fecha,hora=DatosViviendaAgrupados$hora ), FUN=sum)
for(i in 1:nrow(SumaTotalPorFechaHora)) {
hora <- SumaTotalPorFechaHora[i, "hora"]
dia <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%d"))
mes <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%m"))
anio <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%Y"))
precio <- DatosOmie[DatosOmie$Anio == anio &
DatosOmie$Mes == mes &
DatosOmie$Dia == dia &
DatosOmie$Hora == hora, "PrecioES"]
print(precio)
if (is.null(precio)) {
precio <- NA
}
SumaTotalPorFechaHora[i, "Precio"] <- precio
}
DatosVivienda <- na.omit(DatosVivienda)
# Sumamos el consumo de cocina, lavanderia y aires acondicionados y si falta algún dato no lo tenemos en cuenta.
SumaTotal <- rowSums(DatosVivienda[, c(7, 8, 9)])
DatosVivienda$Fecha=as.Date(DatosVivienda$Fecha, format = "%d/%m/%Y")
DatosVivienda$Hora=substr(DatosVivienda$Hora, 1,2)
DatosViviendaAgrupados <- data.frame(fecha=DatosVivienda$Fecha, hora=DatosVivienda$Hora, consumo_total=SumaTotal)
SumaTotalPorFechaHora <- aggregate(DatosViviendaAgrupados$consumo_total, list(fecha=DatosViviendaAgrupados$fecha,hora=DatosViviendaAgrupados$hora ), FUN=sum)
for(i in 1:nrow(SumaTotalPorFechaHora)) {
hora <- SumaTotalPorFechaHora[i, "hora"]
dia <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%d"))
mes <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%m"))
anio <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%Y"))
precio <- DatosOmie[DatosOmie$Anio == anio &
DatosOmie$Mes == mes &
DatosOmie$Dia == dia &
DatosOmie$Hora == hora, "PrecioES"]
print(precio)
if (length(precio) == 0) {
precio <- NA
}
SumaTotalPorFechaHora[i, "Precio"] <- precio
}
View(DatosOmie)
setwd("~/atmaee")
library(lubridate)
library(ggplot2)
files <- list.files(path="OMIE", pattern="*", full.names=TRUE, recursive=FALSE)
DatosOmie <- lapply(files, function(x) {
t <- read.csv(x, header= FALSE, sep = ";", comment.char = "*", skip = 1)
# t <- c(mean(t$V1), mean(t$V2), mean(t$V3), mean(t$V5))
})
DatosOmie <- do.call(rbind, DatosOmie)
colnames(DatosOmie) = c("Anio","Mes", "Dia", "Hora", "PrecioES")
DatosOmie$Hora <- sprintf("%02d", as.numeric(DatosOmie$Hora))
DatosOmie$Hora[DatosOmie$Hora=="24"] <- "00"
DatosOmie <- unique( DatosOmie[ , 1:5 ] )
## Cargando datos consumo ##
DatosVivienda= read.csv("household_power_consumption.txt", comment.char = "@", sep = ";", na.strings=c("?","NA"))
colnames(DatosVivienda) = c("Fecha","Hora", "PotenciaActivaGlobal (kW)",
"PotenciaReactivaGlobal (kW)", "Voltaje (V)",
"IntensidadGlobal (A)","ConsumoCocina (Wh)","ConsumoLavanderia (Wh)","ConsumoAireyCalentador (Wh)")
DatosVivienda <- na.omit(DatosVivienda)
# Sumamos el consumo de cocina, lavanderia y aires acondicionados y si falta algún dato no lo tenemos en cuenta.
SumaTotal <- rowSums(DatosVivienda[, c(7, 8, 9)])
DatosVivienda$Fecha=as.Date(DatosVivienda$Fecha, format = "%d/%m/%Y")
DatosVivienda$Hora=substr(DatosVivienda$Hora, 1,2)
DatosViviendaAgrupados <- data.frame(fecha=DatosVivienda$Fecha, hora=DatosVivienda$Hora, consumo_total=SumaTotal)
SumaTotalPorFechaHora <- aggregate(DatosViviendaAgrupados$consumo_total, list(fecha=DatosViviendaAgrupados$fecha,hora=DatosViviendaAgrupados$hora ), FUN=sum)
for(i in 1:nrow(SumaTotalPorFechaHora)) {
hora <- SumaTotalPorFechaHora[i, "hora"]
dia <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%d"))
mes <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%m"))
anio <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%Y"))
precio <- DatosOmie[DatosOmie$Anio == anio &
DatosOmie$Mes == mes &
DatosOmie$Dia == dia &
DatosOmie$Hora == hora, "PrecioES"]
print(precio)
if (length(precio) == 0) {
precio <- NA
}
SumaTotalPorFechaHora[i, "Precio"] <- precio
}
SumaTotal <- rowSums(DatosVivienda[, c(7, 8, 9)])
DatosVivienda$Fecha=as.Date(DatosVivienda$Fecha, format = "%d/%m/%Y")
DatosVivienda$Hora=substr(DatosVivienda$Hora, 1,2)
DatosViviendaAgrupados <- data.frame(fecha=DatosVivienda$Fecha, hora=DatosVivienda$Hora, consumo_total=SumaTotal)
SumaTotalPorFechaHora <- aggregate(DatosViviendaAgrupados$consumo_total, list(fecha=DatosViviendaAgrupados$fecha,hora=DatosViviendaAgrupados$hora ), FUN=sum)
for(i in 1:nrow(SumaTotalPorFechaHora)) {
hora <- SumaTotalPorFechaHora[i, "hora"]
dia <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%d"))
mes <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%m"))
anio <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%Y"))
precio <- DatosOmie[DatosOmie$Anio == anio &
DatosOmie$Mes == mes &
DatosOmie$Dia == dia &
DatosOmie$Hora == hora, "PrecioES"]
print(anio)
print(mes)
print(dia)
print(hora)
print(precio)
if (length(precio) == 0) {
precio <- NA
}
SumaTotalPorFechaHora[i, "Precio"] <- precio
}
View(DatosOmie)
library(lubridate)
library(ggplot2)
files <- list.files(path="OMIE", pattern="*", full.names=TRUE, recursive=FALSE)
DatosOmie <- lapply(files, function(x) {
t <- read.csv(x, header= FALSE, sep = ";", comment.char = "*", skip = 1)
# t <- c(mean(t$V1), mean(t$V2), mean(t$V3), mean(t$V5))
})
DatosOmie <- do.call(rbind, DatosOmie)
colnames(DatosOmie) = c("Anio","Mes", "Dia", "Hora", "PrecioES")
DatosOmie$Hora <- sprintf("%02d", as.numeric(DatosOmie$Hora))
DatosOmie$Hora[DatosOmie$Hora=="24"] <- "00"
DatosOmie <- unique( DatosOmie[ , 1:4 ] )
## Cargando datos consumo ##
DatosVivienda= read.csv("household_power_consumption.txt", comment.char = "@", sep = ";", na.strings=c("?","NA"))
colnames(DatosVivienda) = c("Fecha","Hora", "PotenciaActivaGlobal (kW)",
"PotenciaReactivaGlobal (kW)", "Voltaje (V)",
"IntensidadGlobal (A)","ConsumoCocina (Wh)","ConsumoLavanderia (Wh)","ConsumoAireyCalentador (Wh)")
DatosVivienda <- na.omit(DatosVivienda)
# Sumamos el consumo de cocina, lavanderia y aires acondicionados y si falta algún dato no lo tenemos en cuenta.
SumaTotal <- rowSums(DatosVivienda[, c(7, 8, 9)])
DatosVivienda$Fecha=as.Date(DatosVivienda$Fecha, format = "%d/%m/%Y")
DatosVivienda$Hora=substr(DatosVivienda$Hora, 1,2)
DatosViviendaAgrupados <- data.frame(fecha=DatosVivienda$Fecha, hora=DatosVivienda$Hora, consumo_total=SumaTotal)
SumaTotalPorFechaHora <- aggregate(DatosViviendaAgrupados$consumo_total, list(fecha=DatosViviendaAgrupados$fecha,hora=DatosViviendaAgrupados$hora ), FUN=sum)
for(i in 1:nrow(SumaTotalPorFechaHora)) {
hora <- SumaTotalPorFechaHora[i, "hora"]
dia <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%d"))
mes <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%m"))
anio <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%Y"))
precio <- DatosOmie[DatosOmie$Anio == anio &
DatosOmie$Mes == mes &
DatosOmie$Dia == dia &
DatosOmie$Hora == hora, "PrecioES"]
print(anio)
print(mes)
print(dia)
print(hora)
print(precio)
if (length(precio) == 0) {
precio <- NA
}
SumaTotalPorFechaHora[i, "Precio"] <- precio
}
DatosOmie <- do.call(rbind, DatosOmie)
colnames(DatosOmie) = c("Anio","Mes", "Dia", "Hora", "PrecioES")
DatosOmie$Hora <- sprintf("%02d", as.numeric(DatosOmie$Hora))
DatosOmie$Hora[DatosOmie$Hora=="24"] <- "00"
DatosOmie <- unique( DatosOmie[ , 1:5 ] )
files <- list.files(path="OMIE", pattern="*", full.names=TRUE, recursive=FALSE)
DatosOmie <- lapply(files, function(x) {
t <- read.csv(x, header= FALSE, sep = ";", comment.char = "*", skip = 1)
# t <- c(mean(t$V1), mean(t$V2), mean(t$V3), mean(t$V5))
})
DatosOmie <- do.call(rbind, DatosOmie)
colnames(DatosOmie) = c("Anio","Mes", "Dia", "Hora", "PrecioES")
DatosOmie$Hora <- sprintf("%02d", as.numeric(DatosOmie$Hora))
DatosOmie$Hora[DatosOmie$Hora=="24"] <- "00"
DatosOmie <- unique( DatosOmie[ , 1:5 ] )
View(DatosOmie)
DatosVivienda= read.csv("household_power_consumption.txt", comment.char = "@", sep = ";", na.strings=c("?","NA"))
colnames(DatosVivienda) = c("Fecha","Hora", "PotenciaActivaGlobal (kW)",
"PotenciaReactivaGlobal (kW)", "Voltaje (V)",
"IntensidadGlobal (A)","ConsumoCocina (Wh)","ConsumoLavanderia (Wh)","ConsumoAireyCalentador (Wh)")
DatosVivienda <- na.omit(DatosVivienda)
# Sumamos el consumo de cocina, lavanderia y aires acondicionados y si falta algún dato no lo tenemos en cuenta.
SumaTotal <- rowSums(DatosVivienda[, c(7, 8, 9)])
DatosVivienda$Fecha=as.Date(DatosVivienda$Fecha, format = "%d/%m/%Y")
DatosVivienda$Hora=substr(DatosVivienda$Hora, 1,2)
DatosViviendaAgrupados <- data.frame(fecha=DatosVivienda$Fecha, hora=DatosVivienda$Hora, consumo_total=SumaTotal)
SumaTotalPorFechaHora <- aggregate(DatosViviendaAgrupados$consumo_total, list(fecha=DatosViviendaAgrupados$fecha,hora=DatosViviendaAgrupados$hora ), FUN=sum)
for(i in 1:nrow(SumaTotalPorFechaHora)) {
hora <- SumaTotalPorFechaHora[i, "hora"]
dia <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%d"))
mes <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%m"))
anio <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%Y"))
precio <- DatosOmie[DatosOmie$Anio == anio &
DatosOmie$Mes == mes &
DatosOmie$Dia == dia &
DatosOmie$Hora == hora, "PrecioES"]
print(anio)
print(mes)
print(dia)
print(hora)
print(precio)
if (length(precio) == 0) {
precio <- NA
}
SumaTotalPorFechaHora[i, "Precio"] <- precio
}
# Sumamos el consumo de cocina, lavanderia y aires acondicionados y si falta algún dato no lo tenemos en cuenta.
SumaTotal <- rowSums(DatosVivienda[, c(7, 8, 9)])
DatosVivienda$Fecha=as.Date(DatosVivienda$Fecha, format = "%d/%m/%Y")
DatosVivienda$Hora=substr(DatosVivienda$Hora, 1,2)
DatosViviendaAgrupados <- data.frame(fecha=DatosVivienda$Fecha, hora=DatosVivienda$Hora, consumo_total=SumaTotal)
SumaTotalPorFechaHora <- aggregate(DatosViviendaAgrupados$consumo_total, list(fecha=DatosViviendaAgrupados$fecha,hora=DatosViviendaAgrupados$hora ), FUN=sum)
for(i in 1:nrow(SumaTotalPorFechaHora)) {
hora <- SumaTotalPorFechaHora[i, "hora"]
dia <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%d"))
mes <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%m"))
anio <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%Y"))
precio <- DatosOmie[DatosOmie$Anio == anio &
DatosOmie$Mes == mes &
DatosOmie$Dia == dia &
DatosOmie$Hora == hora, "PrecioES"][0]
print(anio)
print(mes)
print(dia)
print(hora)
print(precio)
if (length(precio) == 0) {
precio <- NA
}
SumaTotalPorFechaHora[i, "Precio"] <- precio
}
DatosVivienda <- na.omit(DatosVivienda)
# Sumamos el consumo de cocina, lavanderia y aires acondicionados y si falta algún dato no lo tenemos en cuenta.
SumaTotal <- rowSums(DatosVivienda[, c(7, 8, 9)])
DatosVivienda$Fecha=as.Date(DatosVivienda$Fecha, format = "%d/%m/%Y")
DatosVivienda$Hora=substr(DatosVivienda$Hora, 1,2)
DatosViviendaAgrupados <- data.frame(fecha=DatosVivienda$Fecha, hora=DatosVivienda$Hora, consumo_total=SumaTotal)
SumaTotalPorFechaHora <- aggregate(DatosViviendaAgrupados$consumo_total, list(fecha=DatosViviendaAgrupados$fecha,hora=DatosViviendaAgrupados$hora ), FUN=sum)
for(i in 1:nrow(SumaTotalPorFechaHora)) {
hora <- SumaTotalPorFechaHora[i, "hora"]
dia <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%d"))
mes <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%m"))
anio <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%Y"))
precio <- DatosOmie[DatosOmie$Anio == anio &
DatosOmie$Mes == mes &
DatosOmie$Dia == dia &
DatosOmie$Hora == hora, "PrecioES"]
print(anio)
print(mes)
print(dia)
print(hora)
print(class(precio))
if (length(precio) == 0) {
precio <- NA
}
SumaTotalPorFechaHora[i, "Precio"] <- precio
}
View(DatosOmie)
setwd("~/atmaee")
library(lubridate)
library(ggplot2)
files <- list.files(path="OMIE", pattern="*", full.names=TRUE, recursive=FALSE)
DatosOmie <- lapply(files, function(x) {
t <- read.csv(x, header= FALSE, sep = ";", comment.char = "*", skip = 1)
# t <- c(mean(t$V1), mean(t$V2), mean(t$V3), mean(t$V5))
})
DatosOmie <- do.call(rbind, DatosOmie)
colnames(DatosOmie) = c("Anio","Mes", "Dia", "Hora", "PrecioES")
DatosOmie$Hora <- sprintf("%02d", as.numeric(DatosOmie$Hora))
DatosOmie$Hora[DatosOmie$Hora=="24"] <- "00"
DatosOmie <- unique( DatosOmie[ , 1:5 ] )
## Cargando datos consumo ##
DatosVivienda= read.csv("household_power_consumption.txt", comment.char = "@", sep = ";", na.strings=c("?","NA"))
colnames(DatosVivienda) = c("Fecha","Hora", "PotenciaActivaGlobal (kW)",
"PotenciaReactivaGlobal (kW)", "Voltaje (V)",
"IntensidadGlobal (A)","ConsumoCocina (Wh)","ConsumoLavanderia (Wh)","ConsumoAireyCalentador (Wh)")
DatosVivienda <- na.omit(DatosVivienda)
# Sumamos el consumo de cocina, lavanderia y aires acondicionados y si falta algún dato no lo tenemos en cuenta.
SumaTotal <- rowSums(DatosVivienda[, c(7, 8, 9)])
DatosVivienda$Fecha=as.Date(DatosVivienda$Fecha, format = "%d/%m/%Y")
DatosVivienda$Hora=substr(DatosVivienda$Hora, 1,2)
DatosViviendaAgrupados <- data.frame(fecha=DatosVivienda$Fecha, hora=DatosVivienda$Hora, consumo_total=SumaTotal)
SumaTotalPorFechaHora <- aggregate(DatosViviendaAgrupados$consumo_total, list(fecha=DatosViviendaAgrupados$fecha,hora=DatosViviendaAgrupados$hora ), FUN=sum)
for(i in 1:nrow(SumaTotalPorFechaHora)) {
hora <- SumaTotalPorFechaHora[i, "hora"]
dia <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%d"))
mes <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%m"))
anio <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%Y"))
precio <- DatosOmie[DatosOmie$Anio == anio &
DatosOmie$Mes == mes &
DatosOmie$Dia == dia &
DatosOmie$Hora == hora, "PrecioES"]
# print(anio)
# print(mes)
# print(dia)
# print(hora)
# print(class(precio))
if (length(precio) == 0) {
precio <- NA
}
SumaTotalPorFechaHora[i, "Precio"] <- precio
}
View(SumaTotalPorFechaHora)
View(DatosVivienda)
setwd("~/atmaee")
library(lubridate)
library(ggplot2)
files <- list.files(path="OMIE", pattern="*", full.names=TRUE, recursive=FALSE)
DatosOmie <- lapply(files, function(x) {
t <- read.csv(x, header= FALSE, sep = ";", comment.char = "*", skip = 1)
# t <- c(mean(t$V1), mean(t$V2), mean(t$V3), mean(t$V5))
})
DatosOmie <- do.call(rbind, DatosOmie)
colnames(DatosOmie) = c("Anio","Mes", "Dia", "Hora", "PrecioES")
DatosOmie$Hora <- sprintf("%02d", as.numeric(DatosOmie$Hora))
DatosOmie$Hora[DatosOmie$Hora=="24"] <- "00"
DatosOmie <- unique( DatosOmie[ , 1:5 ] )
## Cargando datos consumo ##
DatosVivienda= read.csv("household_power_consumption.txt", comment.char = "@", sep = ";", na.strings=c("?","NA"))
colnames(DatosVivienda) = c("Fecha","Hora", "PotenciaActivaGlobal (kW)",
"PotenciaReactivaGlobal (kW)", "Voltaje (V)",
"IntensidadGlobal (A)","ConsumoCocina (Wh)","ConsumoLavanderia (Wh)","ConsumoAireyCalentador (Wh)")
DatosVivienda <- na.omit(DatosVivienda)
# Sumamos el consumo de cocina, lavanderia y aires acondicionados y si falta algún dato no lo tenemos en cuenta.
SumaTotal <- rowSums(DatosVivienda[, c(7, 8, 9)])
DatosVivienda$Fecha=as.Date(DatosVivienda$Fecha, format = "%d/%m/%Y")
DatosVivienda$Hora=substr(DatosVivienda$Hora, 1,2)
DatosViviendaAgrupados <- data.frame(fecha=DatosVivienda$Fecha, hora=DatosVivienda$Hora, consumo_total=SumaTotal)
SumaTotalPorFechaHora <- aggregate(DatosViviendaAgrupados$consumo_total, list(fecha=DatosViviendaAgrupados$fecha,hora=DatosViviendaAgrupados$hora ), FUN=sum)
for(i in 1:nrow(SumaTotalPorFechaHora)) {
hora <- SumaTotalPorFechaHora[i, "hora"]
dia <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%d"))
mes <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%m"))
anio <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%Y"))
precio <- DatosOmie[DatosOmie$Anio == anio &
DatosOmie$Mes == mes &
DatosOmie$Dia == dia &
DatosOmie$Hora == hora, "PrecioES"]
if (length(precio) == 0) {
precio <- NA
}
SumaTotalPorFechaHora[i, "Precio"] <- precio
SumaTotalPorFechaHora[i, "Gasto"] <- SumaTotalPorFechaHora[i, "x"] * precio / 1000000
}
View(SumaTotalPorFechaHora)
library(lubridate)
library(ggplot2)
setwd("~/atmaee")
DatosVivienda = read.csv("household_power_consumption.txt", comment.char = "@", sep = ";", na.strings=c("?","NA"))
DatosVivienda <- na.omit(DatosVivienda)
colnames(DatosVivienda) = c("Fecha","Hora", "PotenciaActivaGlobal (kW)",
"PotenciaReactivaGlobal (kW)", "Voltaje (V)",
"IntensidadGlobal (A)","ConsumoCocina (Wh)","ConsumoLavanderia (Wh)","ConsumoAireyCalentador (Wh)")
# Sumamos el consumo de cocina, lavanderia y aires acondicionados y si falta algun dato no lo tenemos en cuenta.
SumaTotal <- rowSums(DatosVivienda[, c(7, 8, 9)])
DatosVivienda$Fecha=as.Date(DatosVivienda$Fecha, format = "%d/%m/%Y")
DatosVivienda$Hora=paste(substr(DatosVivienda$Hora, 1,2), ":00:00", sep = "")
DatosViviendaAgrupados <- data.frame(fecha=DatosVivienda$Fecha, hora=DatosVivienda$Hora, consumo_total=SumaTotal)
SumaTotalPorFechaHora <- aggregate(DatosViviendaAgrupados$consumo_total, list(fecha=DatosViviendaAgrupados$fecha,hora=DatosViviendaAgrupados$hora ), FUN=sum)
SumaTotalPorFechaHora$tiempo=as.POSIXct(paste(SumaTotalPorFechaHora$fecha, SumaTotalPorFechaHora$hora), format="%Y-%m-%d %H:%M:%S")
anios <- sort(unique(year(SumaTotalPorFechaHora$fecha)))
pdf("graficas/curva_monotona_de_carga.pdf",width=6,height=4,paper='special')
for(y in anios){
datosAnio <- subset(SumaTotalPorFechaHora, year(SumaTotalPorFechaHora$fecha) == y)
datosAnio <- datosAnio[order(-datosAnio$x),]
print(quickplot(1:nrow(datosAnio) ,datosAnio$x , geom = c("line"), xlab = "Horas", ylab = "Consumo (Wh)", ylim = c(0,3500), main = paste("Año", y, sep = " ")))
}
dev.off()
View(datosAnio)
DatosVivienda = read.csv("household_power_consumption.txt", comment.char = "@", sep = ";", na.strings=c("?","NA"))
DatosVivienda <- na.omit(DatosVivienda)
colnames(DatosVivienda) = c("Fecha","Hora", "PotenciaActivaGlobal (kW)",
"PotenciaReactivaGlobal (kW)", "Voltaje (V)",
"IntensidadGlobal (A)","ConsumoCocina (Wh)","ConsumoLavanderia (Wh)","ConsumoAireyCalentador (Wh)")
# Sumamos el consumo de cocina, lavanderia y aires acondicionados y si falta algun dato no lo tenemos en cuenta.
SumaTotal <- rowSums(DatosVivienda[, c(7, 8, 9)])
DatosVivienda$Fecha=as.Date(DatosVivienda$Fecha, format = "%d/%m/%Y")
DatosVivienda$Hora=paste(substr(DatosVivienda$Hora, 1,2), ":00:00", sep = "")
DatosViviendaAgrupados <- data.frame(fecha=DatosVivienda$Fecha, hora=DatosVivienda$Hora, consumo_total=SumaTotal)
SumaTotalPorFechaHora <- aggregate(DatosViviendaAgrupados$consumo_total, list(fecha=DatosViviendaAgrupados$fecha,hora=DatosViviendaAgrupados$hora ), FUN=sum)
SumaTotalPorFechaHora$tiempo=as.POSIXct(paste(SumaTotalPorFechaHora$fecha, SumaTotalPorFechaHora$hora), format="%Y-%m-%d %H:%M:%S")
anios <- sort(unique(year(SumaTotalPorFechaHora$fecha)))
pdf("graficas/curva_monotona_de_carga_por_meses.pdf",width=6,height=4,paper='special')
for(y in anios){
datosAnio <- subset(SumaTotalPorFechaHora, year(SumaTotalPorFechaHora$fecha) == y)
#datosAnio <- datosAnio[order(-datosAnio$x),]
meses <- sort(unique(month(datosAnio$fecha)))
for(m in meses){
datosMes <- subset(datosAnio, month(datosAnio$fecha) == m)
datosMes <- datosMes[order(-datosMes$x),]
print(quickplot(1:nrow(datosMes) ,datosMes$x , geom = c("line"), xlab = "Horas", ylab = "Consumo (Wh)", ylim = c(0,3500), main = paste("Año", y, sep = " ")))
}
}
dev.off()
pdf("graficas/curva_monotona_de_carga_por_meses.pdf",width=6,height=4,paper='special')
for(y in anios){
datosAnio <- subset(SumaTotalPorFechaHora, year(SumaTotalPorFechaHora$fecha) == y)
#datosAnio <- datosAnio[order(-datosAnio$x),]
meses <- sort(unique(month(datosAnio$fecha)))
for(m in meses){
datosMes <- subset(datosAnio, month(datosAnio$fecha) == m)
datosMes <- datosMes[order(-datosMes$x),]
print(quickplot(1:nrow(datosMes) ,datosMes$x , geom = c("line"), xlab = "Horas", ylab = "Consumo (Wh)", ylim = c(0,3500), main = paste(month.abb[m], y, sep = " ")))
}
}
dev.off()
pdf("graficas/curva_monotona_de_carga_por_meses.pdf",width=6,height=4,paper='special')
for(y in anios){
datosAnio <- subset(SumaTotalPorFechaHora, year(SumaTotalPorFechaHora$fecha) == y)
#datosAnio <- datosAnio[order(-datosAnio$x),]
meses <- sort(unique(month(datosAnio$fecha)))
for(m in meses){
datosMes <- subset(datosAnio, month(datosAnio$fecha) == m)
datosMes <- datosMes[order(-datosMes$x),]
print(quickplot(1:nrow(datosMes) ,datosMes$x , geom = c("line"), xlab = "Horas", ylab = "Consumo (Wh)", ylim = c(0,5000), main = paste(month.abb[m], y, sep = " ")))
}
}
dev.off()
View(DatosOmie)
View(DatosOmie)
data <- DatosOmie[DatosOmie$Anio == 2006 &
DatosOmie$Mes == 12 &
DatosOmie$Dia == 16,]
View(data)
View(SumaTotalPorFechaHora)
View(SumaTotalPorFechaHora)
View(DatosOmie)
View(SumaTotalPorFechaHora)
files <- list.files(path="OMIE", pattern="*", full.names=TRUE, recursive=FALSE)
DatosOmie <- lapply(files, function(x) {
t <- read.csv(x, header= FALSE, sep = ";", comment.char = "*", skip = 1)
# t <- c(mean(t$V1), mean(t$V2), mean(t$V3), mean(t$V5))
})
DatosOmie <- do.call(rbind, DatosOmie)
colnames(DatosOmie) = c("Anio","Mes", "Dia", "Hora", "PrecioES")
DatosOmie$Hora <- sprintf("%02d", as.numeric(DatosOmie$Hora))
DatosOmie$Hora[DatosOmie$Hora=="24"] <- "00"
DatosOmie <- unique( DatosOmie[ , 1:5 ] )
## Cargando datos consumo ##
DatosVivienda= read.csv("household_power_consumption.txt", comment.char = "@", sep = ";", na.strings=c("?","NA"))
colnames(DatosVivienda) = c("Fecha","Hora", "PotenciaActivaGlobal (kW)",
"PotenciaReactivaGlobal (kW)", "Voltaje (V)",
"IntensidadGlobal (A)","ConsumoCocina (Wh)","ConsumoLavanderia (Wh)","ConsumoAireyCalentador (Wh)")
DatosVivienda <- na.omit(DatosVivienda)
# Sumamos el consumo de cocina, lavanderia y aires acondicionados y si falta algún dato no lo tenemos en cuenta.
SumaTotal <- rowSums(DatosVivienda[, c(7, 8, 9)])
DatosVivienda$Fecha=as.Date(DatosVivienda$Fecha, format = "%d/%m/%Y")
DatosVivienda$Hora=substr(DatosVivienda$Hora, 1,2)
DatosViviendaAgrupados <- data.frame(fecha=DatosVivienda$Fecha, hora=DatosVivienda$Hora, consumo_total=SumaTotal)
SumaTotalPorFechaHora <- aggregate(DatosViviendaAgrupados$consumo_total, list(fecha=DatosViviendaAgrupados$fecha,hora=DatosViviendaAgrupados$hora ), FUN=sum)
for(i in 1:nrow(SumaTotalPorFechaHora)) {
hora <- SumaTotalPorFechaHora[i, "hora"]
dia <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%d"))
mes <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%m"))
anio <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%Y"))
precio <- DatosOmie[DatosOmie$Anio == anio &
DatosOmie$Mes == mes &
DatosOmie$Dia == dia &
DatosOmie$Hora == hora, "PrecioES"]
if (length(precio) == 0) {
precio <- NA
}
SumaTotalPorFechaHora[i, "Precio"] <- precio
SumaTotalPorFechaHora[i, "Gasto"] <- SumaTotalPorFechaHora[i, "x"] * precio / 1000000
}
files <- list.files(path="OMIE", pattern="*", full.names=TRUE, recursive=FALSE)
DatosOmie <- lapply(files, function(x) {
t <- read.csv(x, header= FALSE, sep = ";", comment.char = "*", skip = 1)
# t <- c(mean(t$V1), mean(t$V2), mean(t$V3), mean(t$V5))
})
DatosOmie <- do.call(rbind, DatosOmie)
colnames(DatosOmie) = c("Anio","Mes", "Dia", "Hora", "PrecioES")
DatosOmie$Hora <- sprintf("%02d", as.numeric(DatosOmie$Hora))
DatosOmie$Hora[DatosOmie$Hora=="24"] <- "00"
DatosOmie <- unique( DatosOmie[ , 1:5 ] )
## Cargando datos consumo ##
DatosVivienda= read.csv("household_power_consumption.txt", comment.char = "@", sep = ";", na.strings=c("?","NA"))
colnames(DatosVivienda) = c("Fecha","Hora", "PotenciaActivaGlobal (kW)",
"PotenciaReactivaGlobal (kW)", "Voltaje (V)",
"IntensidadGlobal (A)","ConsumoCocina (Wh)","ConsumoLavanderia (Wh)","ConsumoAireyCalentador (Wh)")
DatosVivienda <- na.omit(DatosVivienda)
# Sumamos el consumo de cocina, lavanderia y aires acondicionados y si falta algún dato no lo tenemos en cuenta.
SumaTotal <- rowSums(DatosVivienda[, c(7, 8, 9)])
DatosVivienda$Fecha=as.Date(DatosVivienda$Fecha, format = "%d/%m/%Y")
DatosVivienda$Hora=substr(DatosVivienda$Hora, 1,2)
DatosViviendaAgrupados <- data.frame(fecha=DatosVivienda$Fecha, hora=DatosVivienda$Hora, consumo_total=SumaTotal)
SumaTotalPorFechaHora <- aggregate(DatosViviendaAgrupados$consumo_total, list(fecha=DatosViviendaAgrupados$fecha,hora=DatosViviendaAgrupados$hora ), FUN=sum)
for(i in 1:nrow(SumaTotalPorFechaHora)) {
hora <- SumaTotalPorFechaHora[i, "hora"]
dia <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%d"))
mes <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%m"))
anio <- as.integer(format(as.Date(SumaTotalPorFechaHora[i, "fecha"],format="%Y-%m-%d"), format = "%Y"))
precio <- DatosOmie[DatosOmie$Anio == anio &
DatosOmie$Mes == mes &
DatosOmie$Dia == dia &
DatosOmie$Hora == hora, "PrecioES"]
if (length(precio) == 0) {
precio <- NA
}
SumaTotalPorFechaHora[i, "Precio"] <- precio
SumaTotalPorFechaHora[i, "Gasto"] <- SumaTotalPorFechaHora[i, "x"] * precio / 1000000
}
View(SumaTotalPorFechaHora)
data <- SumaTotalPorFechaHora[SumaTotalPorFechaHora$fecha == "2006-12-17",]
View(data)
quickplot(data$hora, data$x , geom = c("line"), xlab = "Horas (h)", ylab = "Consumo (Wh)", ylim = c(0,5000), main = " ")
quickplot(data$hora, data$x , geom = c("line"), xlab = "Horas (h)", ylab = "Consumo (Wh)")
quickplot(data$hora, data$x , geom = c("line"), xlab = "Horas (h)", ylab = "Consumo (Wh)", group = 1)
lines(data$hora, data$Precio,col="green")
quickplot(data$hora, data$x , geom = c("line"), xlab = "Horas (h)", ylab = "Consumo (Wh)", group = 1) + lines(data$hora, data$Precio,col="green")
quickplot(data$hora, data$x , geom = c("line"), xlab = "Horas (h)", ylab = "Consumo (Wh)", group = 1) + geom_line(data$hora, data$Precio,col="green")
plot(data$hora, data$x , geom = c("line"), xlab = "Horas (h)", ylab = "Consumo (Wh)", group = 1)
lines(data$hora, data$Precio,col="green")
plot(data$hora, data$x , type = "line", xlab = "Horas (h)", ylab = "Consumo (Wh)", group = 1)
lines(data$hora, data$Precio,col="green")
lines(data$hora, data$Gasto,col="blue")
plot(data$hora, data$Precio , type = "line", xlab = "Horas (h)", ylab = "Consumo (Wh)", group = 1)
lines(data$hora, data$Gasto,col="blue")
lines(data$hora, data$Gasto,col="blue")
plot(data$hora, data$Precio , type = "line", xlab = "Horas (h)", ylab = "Consumo (Wh)", group = 1)
lines(data$hora, data$Gasto,col="green")
